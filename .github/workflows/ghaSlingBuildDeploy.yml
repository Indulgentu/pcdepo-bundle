name: Build

on:
  push:
    branches:
    - develop
  workflow_dispatch:
        
jobs:
  build:
    environment: 
      name: develop
      url: https://pcdepodev.alexbam.me/
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
  
    steps:
    - uses: actions/checkout@v3
    - name: Setup Run
      run: |
        echo "🏃‍♂️Running workflow on ${{ vars.CURRENV }} environment"
        echo "👷Working on ${{ github.ref_name }}"
        
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: me.alexbam.pcdepo # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
    - name: Extract Maven project version
      run: echo "version=$(mvn -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> "$GITHUB_ENV"

    - name: Show extracted Maven project version
      run: echo $version
      
    - name: Maven Build
      run: |
        echo "Running Maven Build with mvn clean install. This is a quiet operation. Logs will be uploaded separately."
        mvn clean install -B -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn --log-file maven.log
    
    - name: Upload bundle artifacts
      uses: actions/upload-artifact@v4
      with:
          name: artifacts
          path: /home/runner/work/pcdepo-bundle/pcdepo-bundle/**/target/
          if-no-files-found: warn
    
    - name: Upload logs
      uses: actions/upload-artifact@v4
      with:
          name: maven-log
          path: ./maven.log

          if-no-files-found: warn
    outputs:
      pomVersion: ${{ env.version }}
    
        
  deploy:
    environment: 
        name: develop
        url: https://pcdepodev.alexbam.me/
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build
    
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4.1.5
        with:
          # Name of the artifact to download. If unspecified, all artifacts for the run are downloaded.
          name: artifacts
      - name: 🚀 Deploying to ${{ vars.CURRENV }}
        run: |
          echo 'Deploying ${{ needs.build.outputs.pomVersion }} package'
          curl -u ${{ secrets.SLINGUSER }}:${{ secrets.SLINGPASSWORD }} -F file=@./core/target/core-${{ needs.build.outputs.pomVersion }}.jar -F name=core-${{ needs.build.outputs.pomVersion }}.jar -F force=true -F install=true https://pcdepodev.alexbam.me/bin/cpm/package.service.html
          curl -u ${{ secrets.SLINGUSER }}:${{ secrets.SLINGPASSWORD }} -F file=@./ui.apps/target/ui.apps-${{ needs.build.outputs.pomVersion }}.zip -F name=ui.apps-${{ needs.build.outputs.pomVersion }}.zip -F force=true -F install=true https://pcdepodev.alexbam.me/bin/cpm/package.service.html

          
